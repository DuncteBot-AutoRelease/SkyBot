/*
 * Skybot, a multipurpose discord bot
 *      Copyright (C) 2017 - 2018  Duncan "duncte123" Sterken & Ramid "ramidzkh" Khan & Maurice R S "Sanduhr32"
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published
 * by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

buildscript {
    ext.kotlin_version = '1.2.61'
    ext.jda_utils_version = '8e11e6d'

    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

plugins {
    id 'java'
    id 'idea'
    id 'maven'
    id 'application'
    id 'com.github.johnrengelman.shadow' version '2.0.4'
    id 'org.jetbrains.kotlin.jvm' version '1.2.60'
    id 'de.fuerstenau.buildconfig' version '1.1.8'
}
apply plugin: 'kotlin'

group = "ml.duncte123.skybot"
version "3.77.2_${getGitHash()}"

def javaVersion = JavaVersion.VERSION_1_10

sourceCompatibility = javaVersion
targetCompatibility = javaVersion

task wrapper(type: Wrapper) {
    gradleVersion = '4.9'
}

repositories {
    jcenter()

    mavenLocal()
    mavenCentral()

    // Use JitPack if jcenter doesn't find, not download everything from JitPack ;)
    maven {
        name 'jitpack'
        url 'https://jitpack.io'
    }
}

buildConfig {
    appName = project.name
    version = project.version
    setPackageName project.group.toString()
//    packageName = project.group
    charset = 'UTF-8'
    clsName = 'BuildConfig'

    buildConfigField("String", "OWNER_ID", "191231307290771456")
    buildConfigField("String", "KOTLIN_VERSION", kotlin_version)
    buildConfigField("boolean", "UNSTABLE", "false")
    buildConfigField("String[]", "URL_ARRAY", '{"https://csshumor.com/", "https://icanhazdadjoke.com/"}')
}

dependencies {
    //Weeb api
    compile group: 'me.duncte123', name: 'weebJava', version: '2.0.1'
    //My little utils
    compile 'com.github.duncte123:botCommons:127d594'

    //JDA (java discord api)
    compile (group: 'com.github.DV8FromTheWorld', name: 'JDA', version: 'ffee810') {
//    compile (group: 'net.dv8tion', name: 'JDA', version: '3.7.0_382') {
        exclude module: 'opus-java'
    }

    //Lavaplayer/Lavalink
    compile group: 'com.sedmelluq', name: 'lavaplayer', version: '1.3.7'
//    compile group: 'com.github.FredBoat', name: 'Lavalink-Client', version: '3.0'
    compile group: 'com.github.DuncteBot', name: 'Lavalink-Client', version: 'a30e63b'

    //Commons text, because UnicodeUnescaper
    compile group: 'org.apache.commons', name: 'commons-text', version: '1.1'

    // MySQL
    compile group: 'mysql', name: 'mysql-connector-java', version: '5.1.6'
    // SQLite
    compile group: 'org.xerial', name: 'sqlite-jdbc', version: '3.20.1'

    //groovy
    compile group: 'org.codehaus.groovy', name: 'groovy-jsr223', version: '2.5.2'
    //groovy sandbox
    compile group: 'org.kohsuke', name: 'groovy-sandbox', version: '1.6'

    // Logback classic
    compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'

    // cp scraping stuffz
    compile group: 'org.reflections', name: 'reflections', version: '0.9.11'

    //Spotify API
    compile group: 'se.michaelthelin.spotify', name: 'spotify-web-api-java', version: '2.0.4'
    // Youtube api
    compile 'com.google.apis:google-api-services-youtube:v3-rev192-1.23.0'

    //Add kotlin
    compile group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib-jdk8', version: kotlin_version
    compile group: 'org.jetbrains.kotlin', name: 'kotlin-reflect', version: kotlin_version
    compile group: 'org.jetbrains.kotlinx', name: 'kotlinx-coroutines-core', version: '0.23.4'

    //test stufzz
    testCompile group: 'junit', name: 'junit', version: '4.12'

    //Spark for website
    compile "com.sparkjava:spark-kotlin:1.0.0-alpha"
    compile "org.jtwig:jtwig-core:5.87.0.RELEASE"
    // Oauth
    compile group: 'com.github.JDA-Applications.JDA-Utilities', name: 'jda-utilities-oauth2', version: jda_utils_version

    compile group: 'com.jagrosh', name: 'JagTag', version: '0.5'

    //Wolfaram alpha
    implementation group: 'com.github.DuncteBot', name: 'wolfram-alpha-java-binding', version: '5c123ae'
}


shadowJar {
    mainClassName = "ml.duncte123.skybot.SkyBot"
    classifier = null
    libsDirName = "../"
}

compileJava.options.encoding = 'UTF-8'

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

kotlin {
    experimental {
        coroutines "enable"
    }
}

build {
    dependsOn clean
    dependsOn jar

    jar.mustRunAfter clean
}

task printVersion {
    println version
}

def getGitHash() {
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'rev-parse', '--short', 'HEAD'
        standardOutput = stdout
    }
    return stdout.toString().trim()
}

